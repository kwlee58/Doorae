Sys.setlocal("LC_CTYPE", "C")
Sys.setlocale("LC_CTYPE", "C")
data<-read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data", sep=",")
str(data)
download.file("http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data", destfile="data.csv")
data2<-read.csv("data.csv")
str(data2)
data<-read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data", header=TRUE, sep=",")
str(data)
url<-http://www.mongabay.com/igapo/zip_codes/CA.htm
url<-"http://www.mongabay.com/igapo/zip_codes/CA.htm"
calif<-readLines(url)
str(calif)
grep("92274 100 Palms", calif)
zip<-calif[152:4206]
zip
zip<-sub("<BR>", "", zip)
head(zip)
zip
grep("92274 100 Palms", calif)
grep("95595 Zenia", calif)
zip<-calif[166:4220]]
zip<-calif[166:4220]
zip<-sub("<BR>", "", zip)
head(zip)
tail(zip)
read.csv("data.csv", na.strings=c("", " ", "n/a"))
read.csv("data.csv", nrows=10)
list.files(pattern="*.csv")
x<-list.files(pattern="*.csv")
for(i in length(x)) assign(x[i], read.csv(x[i]))
str(x)
x
object.size(data)
dim(data)
summary(data)
names(data)
sapply(data, class)
rowSums(data)
colSums(data)
x<-data.frame(Category=c("A", "A", "B", "B"), Number=c(1, 2, 3, 3), Num=c(1, 2, 3, 3))
names(x)
names(x)[3]<-"Number"
names(x)
x
duplicated(x[, 2], x[, 3])
duplicated(names(x))
identical(x[, 2], x[, 3])
x[, 3] <- NULL
x
x[duplicated(x), ]
duplicated(x)
?duplicated
usnique(x)
unique(x)
x<-unique(x)
na.fail(x)
x<-data.frame(a=1:10, b=11:20)
x$a[4]=NA
x$b[7:8]=NA
x
na.fail(x)
?na.fail
is.na(x)
which(is.na(x))
which(is.na(x$a))
which(is.na(x$b))
table(is.na(x))
table(complete.cases(x))
complete.cases(x)
na.omit(x)
x[complete.cases(x),]
subset(x, is.na(x$a))
x[!complete.cases(x$a),]
ã x<-c(1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8)
x<-c(1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8)
x
table(x)
sort(table(x))
sort(-table(x))
sort(-table(x))[1]
names(sort(-table(x)))[1]
?dump
mode<-function(x) print("mode"=names(sort(-table(x)))[1])
mode(x)
?mode
my.mode<-function(x) {print("mode"=names(sort(-table(x)))[1])}
my.mode(x)
ls()
rm(mode)
my.mode<-function(x){print("mode"=names(sort(-table(x)))[1])}
my.mode(x)
x
my.mode<-function(x) print("mode"=names(sort(-table(x)))[1])
my.mode(x)
my.mode<-function(x) print(c("mode"=names(sort(-table(x)))[1]))
my.mode(x)
my.mode<-function(x) names(sort(-table(x)))[1]
my.mode(x)
my.mode<-function(x) "mode"=names(sort(-table(x)))[1]
my.mode(x)
my.mode<-function(x) c("mode"=names(sort(-table(x)))[1])
my.mode(x)
dump("my.mode", file="myFunctions.R") 
list.files()
my.sd <- function(x) c("SD"=round(sd(x), digits=2))
my.sd(x)
dump("my.sd", file="myFunctions.R", append=TRUE) 
rm(list(patt="*.R"))
rm(list(patt="R"))
rm(list=ls(patt="*.R"))
ls()
source("myFunctions.R")
ls()
matrix(replicate(3, rnorm(5)), 5)
matrix(rep(rnorm(5), 3), 5)
set.seed(1)
matrix(replicate(3, rnorm(5)), 5)
matrix(rep(rnorm(5), 3), 5)
set.seed(1)
matrix(rep(rnorm(5), 3), 5)
sample(100,12)
set.seed(1)
sample(100,12)
set.seed(1)
sample(100,12)
sample(c("male", "female"), size=5, replace=TRUE)
sample(c("male", "female"), size=5, replace=TRUE)
sample(c("male", "female"), size=5, replace=TRUE)
x<-list(num=c(1, 2, NA, 3, NA), char=c("a", "b", "c"), count=5:8)
x[[c(1,3)]]
x[[1]][[3]]
x[[1]][3]
x[[c(1,4)]]
x[[1]][4]
x[[1]][[4]]
x[[1]]
class(x[[1]])
x[[1]][1]
x[[1]][[1]]
?subset
fruit<-rep(c("apple", "orange"),)
fruit<-rep(c("apple", "orange"),3)
fruit
count<-round(ruinf(6, min=1,max=20))
count<-round(runif(6, min=1,max=20))
count
x<-data.frame(fruit, count)
str(x)
order(x[,1], x[,2])
x[order(x[,1], x[,2]),]
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
df<-data.frame(headcount=rep(1,100), gender=sample(c("male", female"), 100, replace=TRUE), grade=sample(c("A", "B", "C", "D", "F"), 100, replace=TRUE))
df<-data.frame(headcount=rep(1,100), gender=sample(c("male", "female"), 100, replace=TRUE), grade=sample(c("A", "B", "C", "D", "F"), 100, replace=TRUE))
df
table(df$grade)
table(df$gender)
table(df$gender, df$grade)
tapply(df$headcount, list(df$gender, df$grade), sum)
?matrix
a <- matrxi(1:12, nrow=3)
a <- matrix(1:12, nrow=3)
a
apply(a, 2, mean)
x<-apply(a, 2, mean)
sweep(a, 2, x)
sweep(a)
sweep(a, mean)
sweep(a, 2, mean)
sweep(a, 2, 1)
CO2
str(CO2)
help(CO2)
aggregate(uptake~Treatment, data=CO2, mean)
aggregate(CO2$uptake, by=CO2$Treatment, mean)
aggregate(CO2$uptake, list(CO2$Treatment), mean)
aggregate(uptake=CO2$uptake, list(Treatment=CO2$Treatment), mean)
aggregate(CO2$uptake, list(Treatment=CO2$Treatment), mean)
tapply(CO2$uptake, CO2$Treatment, mean)
tapply(CO2$uptake, list(CO2$Treatment, CO2$Type), mean)
aggregate(CO2$uptake, by=list(Treatment=CO2$Treatment, Type=CO2$Type), mean)
str(tapply(CO2$uptake, list(CO2$Treatment, CO2$Type), mean))
(uptake<-tapply(CO2$uptake, list(CO2$Treatment, CO2$Type), mean))
?'('
names(uptake)<-"uptake"
uptake
names(uptake)<-NULL
uptake
aggregate(cbind(conc, uptake)~Type+Treatment, data=CO2, mean)
aggregate(cbind(conc, uptake)~Type+Treatment, data=CO2, FUN=function(x) c(mean=mean(x), SD=sd(x)))
aggregate(cbind(conc, uptake)~Type+Treatment, data=CO2, FUN=function(x) c(mean(x), sd(x)))
aggregate(cbind(conc, uptake)~Type+Treatment, data=CO2, FUN=function(x) c(M=mean(x), SD=sd(x)))
aggregate(cbind(conc, uptake)~Type+Treatment, data=CO2, FUN=function(x) c(Mean=mean(x), SD=sd(x)))
options(digits=2)
aggregate(cbind(conc, uptake)~Type+Treatment, data=CO2, FUN=function(x) c(Mean=mean(x), SD=sd(x)))
library(plyr)
?ddply
ddply(CO2, .(Type, Treatment), summarize, mean(conc), sd(conc), mean(uptake), sd(uptake))
?summarize
ddply(CO2, .(Type, Treatment), summarize, Mean.conc=mean(conc), SD.conc=sd(conc), Mean.uptake=mean(uptake), SD.uptake=sd(uptake))
CO2$conc
CO2
x<-round(runif(200, min=0, max=100))
x
hist(x)
sample(x, size=5, replace=TRUE) 
y<-replicate(100, sample(x, size=5, replace=TRUE)
)
y
z<-apply(y, 2, mean)
hist(z)
qqnorm(z)
hist(colMeans(y))
y<-replicate(1000, sample(x, size=5, replace=TRUE)

hist(colMeans(y))
qqnorm(colMeans(y))
exercise<-sample(c("none", "moderate", "high"), size=300, replace=TRUE)
grade<-sample(c("A", "B", "C", "D", "F"), size=300, replace=TRUE)
sleep<-sample(c("plenty", "moderate", "little", NA), size=300, replace=TRUE)
df<-data.frame(exercise, sleep, grade)
table(exercise, grade)
freq<-table(exercise, grade)
chisq.test(freq)
summary(freq)
discr<-array(c(14, 62, 5, 12, 9, 45, 3, 5), dim=c(2, 2, 2), dimnames=list(DeathSent=c("Yes", "No"), Defendent=c("Black", "White"), Victim=c("Black", "White")))
discr
mantelhaen.test(discr)
str(discr)
apply(discr, 2, sum)
apply(discr, c(1, 2), sum)
apply(discr, c(1, 3), sum)
apply(discr, c(2, 3), sum)
as.data.frame(discr)
ã……table(sleep)
table(sleep)
table(sleep, exclude=NULL)
?table
ls()
discr
as.data.frame.table(discr)
as.data.frame(discr)
as.data.frame.table(Titanic)
str(as.data.frame.table(Titanic))
str(Titanic)
ls()
?as.data.frame.table
df
grade == "A"
ifelse(grade == "A", points <- round(runif(1, min=90, max=100)), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=1), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=1), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=1), points<-0.0)
df
str(df)
ifelse(grade == "A", points <- sample(90:100, size=1), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=1), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=2), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=5), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=length(grade=="A")), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=length(grade=="A"), replace=TRUE), points<-0.0)
ifelse(grade == "A", points <- sample(90:100, size=length(grade=="A"), replace=TRUE), 
ifelse(grade == "B", points <- sample(80:89, size=length(grade == "B"), replace=TRUE),
ifelse(grade == "C", points <- sample(70:79, size=length(grade == "C"), replace=TRUE),
ifelse(grade == "D", points <-sample(60:69, size=length(grade == "D"), replace=TRUE),
points<-sample(0:59, size=length(grade == "F"), replace=TRUE)))))
points
points<-ifelse(grade == "A", points <- sample(90:100, size=length(grade=="A"), replace=TRUE), 
ifelse(grade == "B", points <- sample(80:89, size=length(grade == "B"), replace=TRUE),
ifelse(grade == "C", points <- sample(70:79, size=length(grade == "C"), replace=TRUE),
ifelse(grade == "D", points <-sample(60:69, size=length(grade == "D"), replace=TRUE),
points<-sample(0:59, size=length(grade == "F"), replace=TRUE)))))
points
cbind(df, points)
df.2<-cbind(df, points)
str(df.2)
head(df)
head(df.2)
table(sleep)
table(sleep, exclude=NULL)
table(exercise, grade)
twoWay<-table(exercise, grade)
twoWay
margin.table(twoWay, 1)
cbind(twoWay, margin.table(twoWay, 1))
cbind(twoWay, row.Sum=.Summargin.table(twoWay, 1))
cbind(twoWay, row.Sum=margin.table(twoWay, 1))
margin.table(cbind(twoWay, row.Sum=margin.table(twoWay, 1)), 2)
row.Sum<-margin.table(twoWay, 1)
cbind(twoWay, row.Sum)
twoWay.1<-cbind(twoWay, row.Sum)
twoWay.1
col.Sum<-margin.table(twoWay.1, 2)
rbind(twoWay.1, col.Sum)
twoWay.2<-rbind(twoWay.1, col.Sum)
twoWay.2
ls()
prop.table(twoWay.2)
prop.table(twoWay.2[1:3, 1:5])
prop.table(twoWay)
margin.table(prop.table(twoWay))
margin.table(prop.table(twoWay), 1)
margin.table(prop.table(twoWay), 2)
prop.table(twoWay, 1)
prop.table(twoWay, 2)
margin.table(prop.table(twoWay, 1),1)
margin.table(prop.table(twoWay, 2),2)
cut(points, quantile(points))
table(quant=cut(points, quantile(points)), sleep)
table(quantile=cut(points, quantile(points)), sleep)
table(points.interval=cut(points, quantile(points)), sleep)
threeWay<-table(exercise, sleep, grade)
threeWay
as.data.frame.table(threeWay)
ftable(threeWay)
prop.table(ftable(threeWay))
str(CO2)
xtabs(cbind(conc, uptake) ~ Type + Treatment, data = CO2)
ftable(xtabs(cbind(conc, uptake) ~ Type + Treatment, data = CO2))
x<-round(runif(100, min=0, max=10))
x
freq<-table(x)
cum.freq<-cumsum(freq)
cum.freq
freq
data.frame(freq, cum.freq)
freq
str(freq)
plot(cum.freq)
lines(cum.freq)
length(x)
table(x)/length(x)
cumsum(table(x))/length(x)
pnorm(80, mean=85, SD=5, lower.tail=TRUE)
?pnrom
?pnorm
pnorm(80, mean=85, sd=5, lower.tail=TRUE)
?curve
plot(pnorm)
plot(qnorm)
curve(pnorm)
curve(dnorm)
split.screen(c(2,2))
screen(1)
plot(x,y)
x<-rnorm(100)
yM-rnorm(100)
y<-rnorm(100)
plot(x,y)
screen(4)
boxplot(x)
screen(2)
barplot(y)
screen(3)
hist(x)
close.screen(all=TRUE)
?split.screen
split.screen(c(1,2))
split.screen(c(2,1), screen=2)
screen(4)
hist(x)
screen(1)
boxplot(x)
boxplot(2)
screen(2)
boxplot(x)
screen(3)
boxplot(x)
close.screen(all=TRUE)
x
y
par(fig=c(0.25, 0.9, 0.35, 1))
plot(x,y)
par(fig=c(0, 0.35, 0.35, 1), new=TRUE)
boxplot(x, axes=FALSE, col="gold")
par(fig=c(0.25, 0.9, 0.11, 0.53), new=TRUE)
boxplot(y, axes=FALSE, col="darkorchid1", horizontal=TRUE)
par("fin")
par("pin")
?layout
layout(matrix(c(1, 3, 2, 3), nrow=2, ncol=2, byrow=TRUE), widths=c(4, 2), heights=c(2, 2))
layout.show()
layout.show(2)
layout.show(3)
layout.show()
layout.show(n=1)
layout.show(n=2)
layout.show(n=3)
layout.show(n=4)
hist(CO2$uptake, col=rainbow(5))
boxplot(CO2$uptake, col="green")
palette()
x<-table(rep(c("White", "Black", "Hispanic", "Asian", "Other"), c(55, 28, 40, 15, 25)))
x
barplot(x, col=1:5)
barplot(x, col=palette())
colors()
barplot(x, col=4:8)
palette(c("antiquewhite3", "aquamarine2", "charteuse4", "chocolate1", "darkblue", "darkgoldenrod2", "firebrick", "darkorchid"))
palette(c("antiquewhite3", "aquamarine2", "chartreuse4", "chocolate1", "darkblue", "darkgoldenrod2", "firebrick", "darkorchid"))
barplot(x, col=4:8)
palette("default")
barplot(x, col=4:8)
curve(dnorm(x, mean=0, sd=1), xlim=c(-3, 3), ann=FALSE)
layout(c(1,1))
curve(dnorm(x, mean=0, sd=1), xlim=c(-3, 3), ann=FALSE)
?pretty
pretty(pi)
pretty(c(-3,3), n=100)
coord.x<-pretty(c(-3, 3), n = 100)
coord.y<-dnorm(coord.x)
polygon(coord.x, coord.y, col="red")
coord.x<-pretty(c(-3, -1), n = 100)
coord.y<-dnorm(coord.x)
curve(dnorm(x, mean=0, sd=1), xlim=c(-3, 3), ann=FALSE)
polygon(coord.x, coord.y, col="red")
coord.x
dnorm(coord.x, mean=0, sd=1)
coord.x<-c(-3, coord.x, -1)
coord.y<-c(0, coord.y, 0)
curve(dnorm(x, mean=0, sd=1), xlim=c(-3, 3), ann=FALSE)
polygon(coord.x, coord.y, col="red")
arrows(-3, 0.1, -2.2, 0.05, col="red", angle=20, code=2, length=.15, lwd=4)
barplot(x, col=c(rep("bisque", 4), "goldenrod"))
ls()
save(file="RFnG0803.rda", list=ls())
savehistory(file="RFnG0803.Rhistory")
terrain<-matrix(1:200, nrow=200, ncol=1)
image(terrain, col=terrain.colors(200), axes=FALSE)
pie(rep(1, 50), col=cm.colors(50))
x<-seq(-4, 4, by=0.2)
y<-sin(x)
plot(x, y, pch=21, bg=grey.colors(20), ann=FALSE)
plot(x, y, pch=21, cex=3, bg=grey.colors(20), ann=FALSE)
custom<-colorRampPalette(c("bisque2", "burlywood3", "coral3", "cadetblue2", "cornflowerblue"))
plot(x, y, pch=21, cex=5, bg=custom(20), ann=FALSE)
?plot
par("bg")
x<-table(rep(c("White", "Black", "Hispanic", "Asian", "Other"), c(55, 28, 40, 15, 25)))
par(bg="lightsalmon", fg="red")
barplot(x, col=heat.colors(5))
box()
par(bg="transparent", fg="black")
barplot(x, col=heat.colors(5))
box()
frame()
plot.new()
search()
library(grid)
ls()
getwd()
ls()
save(file="RFnG0803.rda", list=ls())
savehistory(file="RFnG0803.Rhistory")
